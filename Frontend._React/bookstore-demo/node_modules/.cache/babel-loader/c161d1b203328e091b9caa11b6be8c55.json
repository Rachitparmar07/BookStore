{"ast":null,"code":"import request from \"./request\";\n\nclass BookService {\n  constructor() {\n    this.ENDPOINT = \"api/Book\";\n  }\n\n  async getAll(params) {\n    const url = `${this.ENDPOINT}/list`;\n    return request.get(url, {\n      params\n    }).then(res => {\n      return res.data;\n    });\n  }\n\n  async getById(id) {\n    const url = `${this.ENDPOINT}/${id}`;\n    return request.get(url).then(res => {\n      return res.data;\n    });\n  }\n\n  async delete(id) {\n    const url = `${this.ENDPOINT}/Delete/${id}`;\n    return request.delete(url).then(res => {\n      return res.data;\n    });\n  }\n\n  async save(data) {\n    data.publisherId = 2;\n    data.quantity = 10;\n\n    if (data.id) {\n      const url = `${this.ENDPOINT}/Update`;\n      return request.put(url, data).then(res => {\n        return res.data;\n      });\n    } else {\n      const url = `${this.ENDPOINT}/Add`;\n      return request.post(url, data).then(res => {\n        return res.data;\n      });\n    }\n  }\n\n}\n\nexport default new BookService();","map":{"version":3,"names":["request","BookService","ENDPOINT","getAll","params","url","get","then","res","data","getById","id","delete","save","publisherId","quantity","put","post"],"sources":["D:/RS2/bookstore-demo/src/service/book.service.ts"],"sourcesContent":["import request from \"./request\";\r\nimport FilterModel from \"../models/FilterModel\";\r\nimport { BookModel } from \"../models/BookModel\";\r\nimport BaseList from \"../models/BaseList\";\r\n\r\nclass BookService {\r\n\tENDPOINT = \"api/Book\";\r\n\r\n\tpublic async getAll(params: FilterModel): Promise<BaseList<BookModel[]>> {\r\n\t\tconst url = `${this.ENDPOINT}/list`;\r\n\t\treturn request.get<BaseList<BookModel[]>>(url, { params }).then((res) => {\r\n\t\t\treturn res.data;\r\n\t\t});\r\n\t}\r\n\r\n\tpublic async getById(id: number): Promise<BookModel> {\r\n\t\tconst url = `${this.ENDPOINT}/${id}`;\r\n\t\treturn request.get<BookModel>(url).then((res) => {\r\n\t\t\treturn res.data;\r\n\t\t});\r\n\t}\r\n\r\n\tpublic async delete(id: number): Promise<BookModel> {\r\n\t\tconst url = `${this.ENDPOINT}/Delete/${id}`;\r\n\t\treturn request.delete<BookModel>(url).then((res) => {\r\n\t\t\treturn res.data;\r\n\t\t});\r\n\t}\r\n\r\n\tpublic async save(data: BookModel): Promise<any> {\r\n\t\tdata.publisherId = 2;\r\n\t\tdata.quantity = 10;\r\n\t\tif (data.id) {\r\n\t\t\tconst url = `${this.ENDPOINT}/Update`;\r\n\t\t\treturn request.put<BookModel>(url, data).then((res) => {\r\n\t\t\t\treturn res.data;\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tconst url = `${this.ENDPOINT}/Add`;\r\n\t\t\treturn request.post<BookModel>(url, data).then((res) => {\r\n\t\t\t\treturn res.data;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\nexport default new BookService();"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;;AAKA,MAAMC,WAAN,CAAkB;EAAA;IAAA,KACjBC,QADiB,GACN,UADM;EAAA;;EAGE,MAANC,MAAM,CAACC,MAAD,EAAsD;IACxE,MAAMC,GAAG,GAAI,GAAE,KAAKH,QAAS,OAA7B;IACA,OAAOF,OAAO,CAACM,GAAR,CAAmCD,GAAnC,EAAwC;MAAED;IAAF,CAAxC,EAAoDG,IAApD,CAA0DC,GAAD,IAAS;MACxE,OAAOA,GAAG,CAACC,IAAX;IACA,CAFM,CAAP;EAGA;;EAEmB,MAAPC,OAAO,CAACC,EAAD,EAAiC;IACpD,MAAMN,GAAG,GAAI,GAAE,KAAKH,QAAS,IAAGS,EAAG,EAAnC;IACA,OAAOX,OAAO,CAACM,GAAR,CAAuBD,GAAvB,EAA4BE,IAA5B,CAAkCC,GAAD,IAAS;MAChD,OAAOA,GAAG,CAACC,IAAX;IACA,CAFM,CAAP;EAGA;;EAEkB,MAANG,MAAM,CAACD,EAAD,EAAiC;IACnD,MAAMN,GAAG,GAAI,GAAE,KAAKH,QAAS,WAAUS,EAAG,EAA1C;IACA,OAAOX,OAAO,CAACY,MAAR,CAA0BP,GAA1B,EAA+BE,IAA/B,CAAqCC,GAAD,IAAS;MACnD,OAAOA,GAAG,CAACC,IAAX;IACA,CAFM,CAAP;EAGA;;EAEgB,MAAJI,IAAI,CAACJ,IAAD,EAAgC;IAChDA,IAAI,CAACK,WAAL,GAAmB,CAAnB;IACAL,IAAI,CAACM,QAAL,GAAgB,EAAhB;;IACA,IAAIN,IAAI,CAACE,EAAT,EAAa;MACZ,MAAMN,GAAG,GAAI,GAAE,KAAKH,QAAS,SAA7B;MACA,OAAOF,OAAO,CAACgB,GAAR,CAAuBX,GAAvB,EAA4BI,IAA5B,EAAkCF,IAAlC,CAAwCC,GAAD,IAAS;QACtD,OAAOA,GAAG,CAACC,IAAX;MACA,CAFM,CAAP;IAGA,CALD,MAKO;MACN,MAAMJ,GAAG,GAAI,GAAE,KAAKH,QAAS,MAA7B;MACA,OAAOF,OAAO,CAACiB,IAAR,CAAwBZ,GAAxB,EAA6BI,IAA7B,EAAmCF,IAAnC,CAAyCC,GAAD,IAAS;QACvD,OAAOA,GAAG,CAACC,IAAX;MACA,CAFM,CAAP;IAGA;EACD;;AAtCgB;;AAwClB,eAAe,IAAIR,WAAJ,EAAf"},"metadata":{},"sourceType":"module"}