{"ast":null,"code":"// import cartService from \"../service/cart.service\";\nimport { Role, RoutePaths } from \"./enum\";\nexport default class Shared {}\nShared.messages = {\n  USER_DELETE: \"Are you sure you want to delete this user?\",\n  UPDATED_SUCCESS: \"Record updated successfully\",\n  UPDATED_FAIL: \"Record cannot be updated\",\n  DELETE_SUCCESS: \"Record deleted successfully\",\n  DELETE_FAIL: \"Record cannot be deleted\",\n  ORDER_SUCCESS: \"Your order is successfully placed\"\n};\nShared.LocalStorageKeys = {\n  USER: \"user\"\n};\nShared.NavigationItems = [{\n  name: \"Users\",\n  route: RoutePaths.User,\n  access: [Role.Admin]\n}, {\n  name: \"Categories\",\n  route: RoutePaths.Category,\n  access: [Role.Admin]\n}, {\n  name: \"Books\",\n  route: RoutePaths.Book,\n  access: [Role.Admin, Role.Seller]\n}, {\n  name: \"Update Profile\",\n  route: RoutePaths.UpdateProfile,\n  access: [Role.Admin, Role.Buyer, Role.Seller]\n}];\n\nShared.hasAccess = (pathname, user) => {\n  const navItem = Shared.NavigationItems.find(navItem => pathname.includes(navItem.route));\n\n  if (navItem) {\n    return !navItem.access || !!(navItem.access && navItem.access.includes(user.roleId));\n  }\n\n  return true;\n};","map":{"version":3,"names":["Role","RoutePaths","Shared","messages","USER_DELETE","UPDATED_SUCCESS","UPDATED_FAIL","DELETE_SUCCESS","DELETE_FAIL","ORDER_SUCCESS","LocalStorageKeys","USER","NavigationItems","name","route","User","access","Admin","Category","Book","Seller","UpdateProfile","Buyer","hasAccess","pathname","user","navItem","find","includes","roleId"],"sources":["D:/RS2/bookstore-demo/src/utils/shared.ts"],"sourcesContent":["import { BookModel } from \"../models/BookModel\";\r\nimport UserModel from \"../models/UserModel\";\r\n// import cartService from \"../service/cart.service\";\r\nimport { Role, RoutePaths } from \"./enum\";\r\n\r\nexport default class Shared {\r\n\tpublic static messages = {\r\n\t\tUSER_DELETE: \"Are you sure you want to delete this user?\",\r\n\t\tUPDATED_SUCCESS: \"Record updated successfully\",\r\n\t\tUPDATED_FAIL: \"Record cannot be updated\",\r\n\t\tDELETE_SUCCESS: \"Record deleted successfully\",\r\n\t\tDELETE_FAIL: \"Record cannot be deleted\",\r\n\t\tORDER_SUCCESS: \"Your order is successfully placed\",\r\n\t};\r\n\r\n\tpublic static LocalStorageKeys = {\r\n\t\tUSER: \"user\",\r\n\t};\r\n\r\n\tpublic static NavigationItems = [\r\n\t\t{\r\n\t\t\tname: \"Users\",\r\n\t\t\troute: RoutePaths.User,\r\n\t\t\taccess: [Role.Admin],\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Categories\",\r\n\t\t\troute: RoutePaths.Category,\r\n\t\t\taccess: [Role.Admin],\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Books\",\r\n\t\t\troute: RoutePaths.Book,\r\n\t\t\taccess: [Role.Admin, Role.Seller],\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Update Profile\",\r\n\t\t\troute: RoutePaths.UpdateProfile,\r\n\t\t\taccess: [Role.Admin, Role.Buyer, Role.Seller],\r\n\t\t},\r\n\t];\r\n\r\n\tpublic static hasAccess = (pathname: string, user: UserModel): boolean => {\r\n\t\tconst navItem = Shared.NavigationItems.find((navItem) =>\r\n\t\t\tpathname.includes(navItem.route)\r\n\t\t);\r\n\t\tif (navItem) {\r\n\t\t\treturn (\r\n\t\t\t\t!navItem.access ||\r\n\t\t\t\t!!(navItem.access && navItem.access.includes(user.roleId))\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn true;\r\n\t};\r\n\t// public static addToCart = (\r\n\t// \tbook: BookModel,\r\n\t// \tid: number\r\n\t// ): Promise<{ error: boolean; message: string }> => {\r\n\t// \treturn cartService\r\n    //   .add({\r\n    //     userId: id,\r\n    //     bookId: book.id as number,\r\n    //     quantity: 1,\r\n    //   })\r\n    //   .then((res) => {\r\n    //     return { error: false, message: \"Item added in cart\" };\r\n    //   })\r\n    //   .catch((e) => {\r\n    //     if (e.status === 500)\r\n    //       return { error: true, message: \"Item already in the cart\" };\r\n    //     else\r\n    //       return { error: true, message: \"something went wrong\" };\r\n    //   });\r\n\t// };\r\n}\r\n"],"mappings":"AAEA;AACA,SAASA,IAAT,EAAeC,UAAf,QAAiC,QAAjC;AAEA,eAAe,MAAMC,MAAN,CAAa;AAAPA,M,CACNC,Q,GAAW;EACxBC,WAAW,EAAE,4CADW;EAExBC,eAAe,EAAE,6BAFO;EAGxBC,YAAY,EAAE,0BAHU;EAIxBC,cAAc,EAAE,6BAJQ;EAKxBC,WAAW,EAAE,0BALW;EAMxBC,aAAa,EAAE;AANS,C;AADLP,M,CAUNQ,gB,GAAmB;EAChCC,IAAI,EAAE;AAD0B,C;AAVbT,M,CAcNU,e,GAAkB,CAC/B;EACCC,IAAI,EAAE,OADP;EAECC,KAAK,EAAEb,UAAU,CAACc,IAFnB;EAGCC,MAAM,EAAE,CAAChB,IAAI,CAACiB,KAAN;AAHT,CAD+B,EAM/B;EACCJ,IAAI,EAAE,YADP;EAECC,KAAK,EAAEb,UAAU,CAACiB,QAFnB;EAGCF,MAAM,EAAE,CAAChB,IAAI,CAACiB,KAAN;AAHT,CAN+B,EAW/B;EACCJ,IAAI,EAAE,OADP;EAECC,KAAK,EAAEb,UAAU,CAACkB,IAFnB;EAGCH,MAAM,EAAE,CAAChB,IAAI,CAACiB,KAAN,EAAajB,IAAI,CAACoB,MAAlB;AAHT,CAX+B,EAgB/B;EACCP,IAAI,EAAE,gBADP;EAECC,KAAK,EAAEb,UAAU,CAACoB,aAFnB;EAGCL,MAAM,EAAE,CAAChB,IAAI,CAACiB,KAAN,EAAajB,IAAI,CAACsB,KAAlB,EAAyBtB,IAAI,CAACoB,MAA9B;AAHT,CAhB+B,C;;AAdZlB,M,CAqCNqB,S,GAAY,CAACC,QAAD,EAAmBC,IAAnB,KAAgD;EACzE,MAAMC,OAAO,GAAGxB,MAAM,CAACU,eAAP,CAAuBe,IAAvB,CAA6BD,OAAD,IAC3CF,QAAQ,CAACI,QAAT,CAAkBF,OAAO,CAACZ,KAA1B,CADe,CAAhB;;EAGA,IAAIY,OAAJ,EAAa;IACZ,OACC,CAACA,OAAO,CAACV,MAAT,IACA,CAAC,EAAEU,OAAO,CAACV,MAAR,IAAkBU,OAAO,CAACV,MAAR,CAAeY,QAAf,CAAwBH,IAAI,CAACI,MAA7B,CAApB,CAFF;EAIA;;EACD,OAAO,IAAP;AACA,C"},"metadata":{},"sourceType":"module"}