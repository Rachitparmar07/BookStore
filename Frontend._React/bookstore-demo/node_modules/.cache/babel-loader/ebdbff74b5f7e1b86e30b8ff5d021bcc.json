{"ast":null,"code":"import request from \"./request\";\n\nclass CategoryService {\n  constructor() {\n    this.ENDPOINT = 'api/category';\n  }\n\n  async getAll(params) {\n    const url = `${this.ENDPOINT}/list`;\n    return request.get(url, {\n      params\n    }).then(res => {\n      return res.data;\n    });\n  }\n\n  async getById(id) {\n    const url = `${this.ENDPOINT}/${id}`;\n    return request.get(url).then(res => {\n      return res.data;\n    });\n  }\n\n  async delete(id) {\n    const url = `${this.ENDPOINT}/Delete/${id}`;\n    return request.delete(url).then(res => {\n      return res.data;\n    });\n  }\n\n  async save(data) {\n    if (data.id) {\n      const url = `${this.ENDPOINT}/Update`;\n      return request.put(url, data).then(res => {\n        return res.data;\n      });\n    } else {\n      const url = `${this.ENDPOINT}/Add`;\n      return request.post(url, data).then(res => {\n        return res.data;\n      });\n    }\n  }\n\n}\n\nexport default new CategoryService();","map":{"version":3,"names":["request","CategoryService","ENDPOINT","getAll","params","url","get","then","res","data","getById","id","delete","save","put","post"],"sources":["D:/RS2/bookstore-demo/src/service/category.service.ts"],"sourcesContent":["import request from \"./request\";\r\nimport FilterModel from \"../models/FilterModel\";\r\nimport BaseList from \"../models/BaseList\";\r\nimport { CategoryModel } from \"../models/CategoryModel\";\r\n\r\nclass CategoryService {\r\n    ENDPOINT = 'api/category';\r\n\r\n    public async getAll(params: FilterModel): Promise<BaseList<CategoryModel[]>> {\r\n        const url = `${this.ENDPOINT}/list`;\r\n        return request.get<BaseList<CategoryModel[]>>(url, {params} ).then((res) => {\r\n            return res.data;\r\n        });\r\n    }\r\n\r\n    public async getById(id: number): Promise<CategoryModel> {\r\n        const url = `${this.ENDPOINT}/${id}`;\r\n        return request.get<CategoryModel>(url).then((res) => {\r\n            return res.data;\r\n        });\r\n    }\r\n\r\n    public async delete(id: number): Promise<CategoryModel> {\r\n        const url = `${this.ENDPOINT}/Delete/${id}`;\r\n        return request.delete<CategoryModel>(url).then((res) => {\r\n            return res.data;\r\n        });\r\n    }\r\n\r\n    public async save(data: CategoryModel): Promise<CategoryModel> {\r\n        if (data.id) {\r\n            const url = `${this.ENDPOINT}/Update`;\r\n            return request.put<CategoryModel>(url, data ).then((res) => {\r\n                return res.data;\r\n            });\r\n        } else {\r\n            const url = `${this.ENDPOINT}/Add`;\r\n            return request.post<CategoryModel>(url, data ).then((res) => {\r\n                return res.data;\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\nexport default new CategoryService();"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;;AAKA,MAAMC,eAAN,CAAsB;EAAA;IAAA,KAClBC,QADkB,GACP,cADO;EAAA;;EAGC,MAANC,MAAM,CAACC,MAAD,EAA0D;IACzE,MAAMC,GAAG,GAAI,GAAE,KAAKH,QAAS,OAA7B;IACA,OAAOF,OAAO,CAACM,GAAR,CAAuCD,GAAvC,EAA4C;MAACD;IAAD,CAA5C,EAAuDG,IAAvD,CAA6DC,GAAD,IAAS;MACxE,OAAOA,GAAG,CAACC,IAAX;IACH,CAFM,CAAP;EAGH;;EAEmB,MAAPC,OAAO,CAACC,EAAD,EAAqC;IACrD,MAAMN,GAAG,GAAI,GAAE,KAAKH,QAAS,IAAGS,EAAG,EAAnC;IACA,OAAOX,OAAO,CAACM,GAAR,CAA2BD,GAA3B,EAAgCE,IAAhC,CAAsCC,GAAD,IAAS;MACjD,OAAOA,GAAG,CAACC,IAAX;IACH,CAFM,CAAP;EAGH;;EAEkB,MAANG,MAAM,CAACD,EAAD,EAAqC;IACpD,MAAMN,GAAG,GAAI,GAAE,KAAKH,QAAS,WAAUS,EAAG,EAA1C;IACA,OAAOX,OAAO,CAACY,MAAR,CAA8BP,GAA9B,EAAmCE,IAAnC,CAAyCC,GAAD,IAAS;MACpD,OAAOA,GAAG,CAACC,IAAX;IACH,CAFM,CAAP;EAGH;;EAEgB,MAAJI,IAAI,CAACJ,IAAD,EAA8C;IAC3D,IAAIA,IAAI,CAACE,EAAT,EAAa;MACT,MAAMN,GAAG,GAAI,GAAE,KAAKH,QAAS,SAA7B;MACA,OAAOF,OAAO,CAACc,GAAR,CAA2BT,GAA3B,EAAgCI,IAAhC,EAAuCF,IAAvC,CAA6CC,GAAD,IAAS;QACxD,OAAOA,GAAG,CAACC,IAAX;MACH,CAFM,CAAP;IAGH,CALD,MAKO;MACH,MAAMJ,GAAG,GAAI,GAAE,KAAKH,QAAS,MAA7B;MACA,OAAOF,OAAO,CAACe,IAAR,CAA4BV,GAA5B,EAAiCI,IAAjC,EAAwCF,IAAxC,CAA8CC,GAAD,IAAS;QACzD,OAAOA,GAAG,CAACC,IAAX;MACH,CAFM,CAAP;IAGH;EACJ;;AApCiB;;AAuCtB,eAAe,IAAIR,eAAJ,EAAf"},"metadata":{},"sourceType":"module"}